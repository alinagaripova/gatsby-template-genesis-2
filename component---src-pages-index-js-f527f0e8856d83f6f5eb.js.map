{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/postCard.js"],"names":["BlogIndex","location","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","postCounter","keywords","description","className","map","node","key","fields","slug","count","postClass","props","query","render","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","to"],"mappings":"uKAWMA,G,cAAY,SAAC,EAAQC,GAAc,IAArBC,EAAoB,EAApBA,KACVC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MACjCC,EAAc,EAElB,OACI,kBAAC,IAAD,CAAQJ,MAAOH,GACX,kBAAC,IAAD,CAAKG,MAAM,UAAUK,SAAU,CAAC,OAAD,iCAG9BT,EAAKE,KAAKC,aAAaO,aACpB,4BAAQC,UAAU,aACd,wBAAIA,UAAU,mBACTX,EAAKE,KAAKC,aAAaO,cAIpC,yBAAKC,UAAU,aACVN,EAAMO,KAAI,YAAa,IAAXC,EAAU,EAAVA,KAET,OADAL,IAEI,kBAAC,IAAD,CACIM,IAAKD,EAAKE,OAAOC,KACjBC,MAAOT,EACPK,KAAMA,EACNK,UAAS,gBAuCtB,mBAAAC,GAAK,OAChB,kBAAC,IAAD,CACIC,MAhCQ,aAiCRC,OAAQ,SAAArB,GAAI,OACR,kBAACF,EAAD,eAAWC,SAAUoB,EAAMpB,SAAUoB,OAAK,EAACnB,KAAMA,GAAUmB,KAHnE,W,iCC5EJ,4BAGe,aAAAA,GAAK,OAChB,6BACIR,UAAS,cAAeQ,EAAMF,MAAQ,GAAM,GAApB,mBAAf,IACLE,EAAMD,UADD,KAEDC,EAAMN,KAAKS,YAAYC,UAAvB,yBACRC,MACIL,EAAMN,KAAKS,YAAYC,WAAa,CAChCE,gBAAgB,OACZN,EAAMN,KAAKS,YAAYC,UAAUG,gBAAgBC,MAAMC,IAD5C,MAMvB,kBAAC,IAAD,CAAMC,GAAIV,EAAMN,KAAKE,OAAOC,KAAML,UAAU,kBACxC,yBAAKA,UAAU,qBACX,wBAAIA,UAAU,mBACTQ,EAAMN,KAAKS,YAAYlB,OAASe,EAAMN,KAAKE,OAAOC,W","file":"component---src-pages-index-js-f527f0e8856d83f6f5eb.js","sourcesContent":["import React from \"react\"\nimport {graphql, StaticQuery} from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({data}, location) => {\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    let postCounter = 0\n\n    return (\n        <Layout title={siteTitle}>\n            <SEO title=\"Главная\" keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n            />\n            {/* <Bio /> */}\n            {data.site.siteMetadata.description && (\n                <header className=\"page-head\">\n                    <h2 className=\"page-head-title\">\n                        {data.site.siteMetadata.description}\n                    </h2>\n                </header>\n            )}\n            <div className=\"post-feed\">\n                {posts.map(({node}) => {\n                    postCounter++\n                    return (\n                        <PostCard\n                            key={node.fields.slug}\n                            count={postCounter}\n                            node={node}\n                            postClass={`post`}\n                        />\n                    )\n                })}\n            </div>\n        </Layout>\n    )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      ...SiteInformation\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC } filter: { fileAbsolutePath: { glob: \"**/content/**/**/*.md\" }}) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n    <StaticQuery\n        query={indexQuery}\n        render={data => (\n            <BlogIndex location={props.location} props data={data} {...props} />\n        )}\n    />\n)\n","import React from \"react\"\nimport {Link} from \"gatsby\"\n\nexport default props => (\n    <article\n        className={`post-card ${props.count % 3 === 0 && `post-card-large`} ${\n            props.postClass\n            } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n        style={\n            props.node.frontmatter.thumbnail && {\n                backgroundImage: `url(${\n                    props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n                    })`,\n            }\n        }\n    >\n        <Link to={props.node.fields.slug} className=\"post-card-link\">\n            <div className=\"post-card-content\">\n                <h2 className=\"post-card-title\">\n                    {props.node.frontmatter.title || props.node.fields.slug}\n                </h2>\n            </div>\n        </Link>\n    </article>\n)\n"],"sourceRoot":""}